{"ast":null,"code":"var _jsxFileName = \"/Users/ericcombee/Documents/GitHub/jordens_games/src/components/MatchGame.js\";\nimport React from \"react\";\nimport \"../css/matchgame.css\";\nimport Card from \"./Card.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchGame() {\n  let cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n  const shuffle = array => {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex > 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: shuffle(cards).map(item => /*#__PURE__*/_jsxDEV(Card, {\n      number: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = MatchGame;\nvar _c;\n$RefreshReg$(_c, \"MatchGame\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","MatchGame","cards","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","className","children","map","item","number","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ericcombee/Documents/GitHub/jordens_games/src/components/MatchGame.js"],"sourcesContent":["import React from \"react\";\nimport \"../css/matchgame.css\";\nimport Card from \"./Card.js\";\n\nexport default function MatchGame() {\n  let cards = [\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n    11, 12, 13,\n  ];\n\n  const shuffle = (array) => {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex > 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n\n    return array;\n  };\n\n  return (\n    <main className=\"main\">\n      {shuffle(cards).map((item) => (\n        <Card number={item} />\n      ))}\n    </main>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAC7B,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,SAASA,CAAA,EAAG;EAClC,IAAIC,KAAK,GAAG,CACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EACxE,EAAE,EAAE,EAAE,EAAE,EAAE,CACX;EAED,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzB,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAM;MAC7BC,WAAW;;IAEb;IACA,OAAOF,YAAY,GAAG,CAAC,EAAE;MACvB;MACAE,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,YAAY,CAAC;MACtDA,YAAY,EAAE;;MAEd;MACA,CAACD,KAAK,CAACC,YAAY,CAAC,EAAED,KAAK,CAACG,WAAW,CAAC,CAAC,GAAG,CAC1CH,KAAK,CAACG,WAAW,CAAC,EAClBH,KAAK,CAACC,YAAY,CAAC,CACpB;IACH;IAEA,OAAOD,KAAK;EACd,CAAC;EAED,oBACEJ,OAAA;IAAMW,SAAS,EAAC,MAAM;IAAAC,QAAA,EACnBT,OAAO,CAACD,KAAK,CAAC,CAACW,GAAG,CAAEC,IAAI,iBACvBd,OAAA,CAACF,IAAI;MAACiB,MAAM,EAAED;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAACC,EAAA,GAjCuBnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}